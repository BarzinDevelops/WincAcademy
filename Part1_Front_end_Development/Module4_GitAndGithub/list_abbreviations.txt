

local VCSs =    Local Version Control systems 
                a simple database that kept all the changes to files under revision control.
                RCS =   Revision Control System: One of the most popular VCS tools was a system called (RCS)
                        RCS works by keeping patch sets (that is, the differences between files) in a special 
                        format on disk; it can then re-create what any file looked like at any point in time 
                        by adding up all the patches.
                Disadvantage(s):
                    - whenever you have the entire history of the project in a single place, you risk losing everything.
-------------------------------------------------------------------------------------------------------------------------
CVCSs = Centralized Version Control Systems 
        These systems (such as CVS, Subversion, and Perforce) have a single server that contains
        all the versioned files, and a number of clients that check out files from that central place.
        Advantage(s):
            -  everyone knows to a certain degree what everyone else on the project is doing. 
            -  Administrators have fine-grained control over who can do what, and it’s far easier 
               to administer a CVCS than it is to deal with local databases on every client.
        Disadvantage(s):
            -  If that server goes down for an hour, then during that hour nobody can collaborate 
               at all or save versioned changes to anything they’re working on. 
            -  If the hard disk the central database is on becomes corrupted, and proper backups haven’t been kept, 
               you lose absolutely everything — the entire history of the project except whatever 
               single snapshots people happen to have on their local machines.
---------------------------------------------------------------------------------------------------------------------------
DVCSs = Distributed Version Control Systems
        In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don’t just check out the latest snapshot of the files; 
        rather, they fully mirror the repository, including its full history.
        Advantage(s):
            -  if any server dies, and these systems were collaborating via that server, any of the client repositories can be copied 
               back up to the server to restore it. Every clone is really a full backup of all the data.
            -  many of these systems deal pretty well with having several remote repositories they can work with, so you can collaborate 
               with different groups of people in different ways simultaneously within the same project.

----------------------------------------------------------------------------------------------------------------------------- 
delta-based version control =   Conceptually, most other systems store information as a list of file-based changes. 
                                These other systems (CVS, Subversion, Perforce, Bazaar, and so on) think of the information 
                                they store as a set of files and the changes made to each file over time 
                                (this is commonly described as delta-based version control).

----------------------------------------------------------------------------------------------------------------------------- 
 commit = saving the state of a project

----------------------------------------------------------------------------------------------------------------------------- 


----------------------------------------------------------------------------------------------------------------------------- 


----------------------------------------------------------------------------------------------------------------------------- 


----------------------------------------------------------------------------------------------------------------------------- 


----------------------------------------------------------------------------------------------------------------------------- 


----------------------------------------------------------------------------------------------------------------------------- 

